/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.56
 * Generated at: 2022-02-16 09:34:27 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.lesson04.quiz03;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import com.test.common.MysqlService;
import java.sql.*;

public final class addNewItem_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("java.sql");
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("com.test.common.MysqlService");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("<!-- content -->\n");
      out.write("<section>\n");
      out.write("	<div class=\"mt-3 ms-3 fs-1 fw-light\">물건 올리기</div>\n");
      out.write("\n");
      out.write("	<form method=\"post\" action=\"/lesson04/addNewItem\">\n");
      out.write("		<div class=\"row g-2\">\n");
      out.write("			<div class=\"col-md\">\n");
      out.write("				<div class=\"form-floating\">\n");
      out.write("					<select class=\"form-select\" id=\"floatingSelectGrid\" name=\"sellerId\" required>\n");
      out.write("					");

					MysqlService sql = MysqlService.getInstance();
					sql.connection();
					
					String selectQuery = "select * from `seller`";
					ResultSet result = sql.select(selectQuery);
					
					while (result.next()) {
					
      out.write("\n");
      out.write("						<option value=\"");
      out.print( result.getInt("id") );
      out.write('"');
      out.write('>');
      out.print( result.getString("nickname") );
      out.write("</option>\n");
      out.write("					");

					}
					sql.disconnect();
					
      out.write("\n");
      out.write("					</select>\n");
      out.write("					<label for=\"floatingSelectGrid\">아이디 선택</label>\n");
      out.write("				</div>\n");
      out.write("			</div>\n");
      out.write("\n");
      out.write("			<div class=\"col-md\">\n");
      out.write("				<div class=\"form-floating\">\n");
      out.write("					<input type=\"text\" class=\"form-control\" id=\"title\" placeholder=\"title\" name=\"title\" required> <label for=\"title\">제목</label>\n");
      out.write("				</div>\n");
      out.write("			</div>\n");
      out.write("\n");
      out.write("			<div class=\"col-md input-group\">\n");
      out.write("				<input type=\"text\" class=\"form-control\" name=\"price\" required> <span class=\"input-group-text\">KRW</span>\n");
      out.write("			</div>\n");
      out.write("		</div>\n");
      out.write("\n");
      out.write("		<div class=\"mt-2\">\n");
      out.write("			<textarea class=\"form-control\" rows=\"5\" name=\"description\"></textarea>\n");
      out.write("		</div>\n");
      out.write("\n");
      out.write("		<div class=\"mt-2 form-floating\">\n");
      out.write("			<input type=\"text\" class=\"form-control\" id=\"imgUrl\" placeholder=\"url\" name=\"pictureUrl\"> <label for=\"imgUrl\">이미지 URL</label>\n");
      out.write("		</div>\n");
      out.write("\n");
      out.write("		<div class=\"mt-2 d-grid\">\n");
      out.write("			<button class=\"btn btn-light\" type=\"submit\">저장</button>\n");
      out.write("		</div>\n");
      out.write("	</form>\n");
      out.write("</section>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
